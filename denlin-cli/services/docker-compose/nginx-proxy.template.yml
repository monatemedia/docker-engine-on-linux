# Template: Nginx Proxy
# Description: A reverse proxy server that routes HTTP and HTTPS traffic to other services based on domain names.

services:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy # Uses the official Nginx Proxy image
    restart: unless-stopped # Ensures the container restarts if it fails
    ports:
      - "80:80" # Exposes HTTP traffic on port 80
      - "443:443" # Exposes HTTPS traffic on port 443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro # Allows Nginx Proxy to monitor running containers
      - ./nginx/html:/usr/share/nginx/html # Mounts custom HTML directory (optional)
      - ./nginx/certs:/etc/nginx/certs # Stores SSL certificates for HTTPS
      - ./nginx/vhost:/etc/nginx/vhost.d # Stores custom Nginx virtual host configurations
      - ./nginx/acme:/etc/acme.sh # Stores Let's Encrypt ACME challenge files for SSL certs
      - ./nginx/html:/usr/share/nginx/html:rw # Ensure the ACME challenge files are placed in the correct path
    networks:
      - proxy-network # Connects to the shared network for communication with other containers

  letsencrypt-companion:
    container_name: letsencrypt-companion
    image: nginxproxy/acme-companion # Uses the ACME companion image to automate SSL certificate renewal
    restart: unless-stopped # Ensures the container restarts if it fails
    depends_on:
      - nginx-proxy # Ensures nginx-proxy starts before this container
    environment:
      DEFAULT_EMAIL: "${user_email}" # Email for Let's Encrypt SSL certificate notifications
      NGINX_PROXY_CONTAINER: "nginx-proxy" # Ensure the LetsEncrypt container knows the nginx-proxy container name
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Allows access to Docker API for detecting running containers
      - ./nginx/acme:/etc/acme.sh:rw # Stores ACME challenge responses for certificate issuance
      - ./nginx/certs:/etc/nginx/certs:rw # Stores SSL certificates
      - ./nginx/vhost:/etc/nginx/vhost.d # Stores virtual host configurations
      - ./nginx/html:/usr/share/nginx/html:rw # Mounts a writable webroot directory for the challenge files
    networks:
      - proxy-network # Connects to the shared network for communication with nginx-proxy

networks:
  proxy-network:
    external: true # Uses an existing external network instead of creating a new one
